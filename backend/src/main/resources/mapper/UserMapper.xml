<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.suitcustom.mapper.UserMapper">
    
    <!-- 结果映射 -->
    <resultMap type="com.suitcustom.entity.User" id="UserResult">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="name" column="name"/>
        <result property="phone" column="phone"/>
        <result property="email" column="email"/>
        <result property="gender" column="gender"/>
        <result property="avatar" column="avatar"/>
        <result property="role" column="role"/>
        <result property="status" column="status"/>
        <result property="lastLoginTime" column="last_login_time"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>
    
    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, username, password, name, phone, email, gender, avatar, role, status, last_login_time, create_time, update_time
    </sql>
    
    <!-- 根据ID查询用户 -->
    <select id="selectById" resultMap="UserResult">
        select 
        <include refid="Base_Column_List"/>
        from user
        where id = #{id}
    </select>
    
    <!-- 根据用户名查询用户 -->
    <select id="selectByUsername" resultMap="UserResult">
        select 
        <include refid="Base_Column_List"/>
        from user
        where username = #{username}
    </select>
    
    <!-- 根据手机号查询用户 -->
    <select id="selectByPhone" resultMap="UserResult">
        select 
        <include refid="Base_Column_List"/>
        from user
        where phone = #{phone}
    </select>
    
    <!-- 查询用户列表 -->
    <select id="selectList" resultMap="UserResult">
        select 
        <include refid="Base_Column_List"/>
        from user
        <where>
            <if test="username != null and username != ''">
                AND username like concat('%', #{username}, '%')
            </if>
            <if test="name != null and name != ''">
                AND name like concat('%', #{name}, '%')
            </if>
            <if test="phone != null and phone != ''">
                AND phone = #{phone}
            </if>
            <if test="email != null and email != ''">
                AND email = #{email}
            </if>
            <if test="gender != null">
                AND gender = #{gender}
            </if>
            <if test="role != null">
                AND role = #{role}
            </if>
            <if test="status != null">
                AND status = #{status}
            </if>
        </where>
        order by create_time desc
    </select>
    
    <!-- 新增用户 -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into user (
            username, password, name, phone, email, gender, avatar, role, status
        ) values (
            #{username}, #{password}, #{name}, #{phone}, #{email}, #{gender}, #{avatar}, #{role}, #{status}
        )
    </insert>
    
    <!-- 更新用户 -->
    <update id="update">
        update user
        <set>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="phone != null and phone != ''">phone = #{phone},</if>
            <if test="email != null">email = #{email},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="avatar != null">avatar = #{avatar},</if>
            <if test="role != null">role = #{role},</if>
            <if test="status != null">status = #{status},</if>
        </set>
        where id = #{id}
    </update>
    
    <!-- 删除用户 -->
    <delete id="deleteById">
        delete from user where id = #{id}
    </delete>
    
    <!-- 批量删除用户 -->
    <delete id="deleteBatchIds">
        delete from user where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
    <!-- 更新用户状态 -->
    <update id="updateStatus">
        update user set status = #{status} where id = #{id}
    </update>
    
    <!-- 更新用户密码 -->
    <update id="updatePassword">
        update user set password = #{password} where id = #{id}
    </update>
    
    <!-- 更新用户头像 -->
    <update id="updateAvatar">
        update user set avatar = #{avatar} where id = #{id}
    </update>
    
    <!-- 更新最后登录时间 -->
    <update id="updateLastLoginTime">
        update user set last_login_time = now() where id = #{id}
    </update>
</mapper> 