// vite.config.ts
import { defineConfig } from "file:///D:/%E5%A4%A7%E5%9B%9B%E4%B8%8A/%E6%AF%95%E8%AE%BE%E9%A1%B9%E7%9B%AE/%E8%A5%BF%E6%9C%8D%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/suit_customization_system/frontend/customer-web/node_modules/vite/dist/node/index.js";
import vue from "file:///D:/%E5%A4%A7%E5%9B%9B%E4%B8%8A/%E6%AF%95%E8%AE%BE%E9%A1%B9%E7%9B%AE/%E8%A5%BF%E6%9C%8D%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/suit_customization_system/frontend/customer-web/node_modules/@vitejs/plugin-vue/dist/index.mjs";
import { resolve } from "path";
import postcssPxToViewport from "file:///D:/%E5%A4%A7%E5%9B%9B%E4%B8%8A/%E6%AF%95%E8%AE%BE%E9%A1%B9%E7%9B%AE/%E8%A5%BF%E6%9C%8D%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/suit_customization_system/frontend/customer-web/node_modules/postcss-px-to-viewport/index.js";
var __vite_injected_original_dirname = "D:\\\u5927\u56DB\u4E0A\\\u6BD5\u8BBE\u9879\u76EE\\\u897F\u670D\u7BA1\u7406\u7CFB\u7EDF\\\u9879\u76EE\u5F00\u53D1\\suit_customization_system\\frontend\\customer-web";
var vite_config_default = defineConfig({
  plugins: [vue()],
  resolve: {
    alias: {
      "@": resolve(__vite_injected_original_dirname, "src")
    }
  },
  css: {
    postcss: {
      plugins: [
        postcssPxToViewport({
          viewportWidth: 375,
          // 设计稿的视口宽度
          unitPrecision: 5,
          // 单位转换后保留的精度
          viewportUnit: "vw",
          // 希望使用的视口单位
          selectorBlackList: [],
          // 需要忽略的CSS选择器
          minPixelValue: 1,
          // 设置最小的转换数值，如果为1的话，只有大于1的值会被转换
          mediaQuery: false
          // 媒体查询里的单位是否需要转换单位
        })
      ]
    }
  },
  server: {
    port: 3001,
    proxy: {
      "/api": {
        target: "http://localhost:8080",
        changeOrigin: true
      }
    }
  }
});
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidml0ZS5jb25maWcudHMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbImNvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9kaXJuYW1lID0gXCJEOlxcXFxcdTU5MjdcdTU2REJcdTRFMEFcXFxcXHU2QkQ1XHU4QkJFXHU5ODc5XHU3NkVFXFxcXFx1ODk3Rlx1NjcwRFx1N0JBMVx1NzQwNlx1N0NGQlx1N0VERlxcXFxcdTk4NzlcdTc2RUVcdTVGMDBcdTUzRDFcXFxcc3VpdF9jdXN0b21pemF0aW9uX3N5c3RlbVxcXFxmcm9udGVuZFxcXFxjdXN0b21lci13ZWJcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZmlsZW5hbWUgPSBcIkQ6XFxcXFx1NTkyN1x1NTZEQlx1NEUwQVxcXFxcdTZCRDVcdThCQkVcdTk4NzlcdTc2RUVcXFxcXHU4OTdGXHU2NzBEXHU3QkExXHU3NDA2XHU3Q0ZCXHU3RURGXFxcXFx1OTg3OVx1NzZFRVx1NUYwMFx1NTNEMVxcXFxzdWl0X2N1c3RvbWl6YXRpb25fc3lzdGVtXFxcXGZyb250ZW5kXFxcXGN1c3RvbWVyLXdlYlxcXFx2aXRlLmNvbmZpZy50c1wiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9pbXBvcnRfbWV0YV91cmwgPSBcImZpbGU6Ly8vRDovJUU1JUE0JUE3JUU1JTlCJTlCJUU0JUI4JThBLyVFNiVBRiU5NSVFOCVBRSVCRSVFOSVBMSVCOSVFNyU5QiVBRS8lRTglQTUlQkYlRTYlOUMlOEQlRTclQUUlQTElRTclOTAlODYlRTclQjMlQkIlRTclQkIlOUYvJUU5JUExJUI5JUU3JTlCJUFFJUU1JUJDJTgwJUU1JThGJTkxL3N1aXRfY3VzdG9taXphdGlvbl9zeXN0ZW0vZnJvbnRlbmQvY3VzdG9tZXItd2ViL3ZpdGUuY29uZmlnLnRzXCI7aW1wb3J0IHsgZGVmaW5lQ29uZmlnIH0gZnJvbSAndml0ZSdcclxuaW1wb3J0IHZ1ZSBmcm9tICdAdml0ZWpzL3BsdWdpbi12dWUnXHJcbmltcG9ydCB7IHJlc29sdmUgfSBmcm9tICdwYXRoJ1xyXG5pbXBvcnQgcG9zdGNzc1B4VG9WaWV3cG9ydCBmcm9tICdwb3N0Y3NzLXB4LXRvLXZpZXdwb3J0J1xyXG5cclxuLy8gaHR0cHM6Ly92aXRlanMuZGV2L2NvbmZpZy9cclxuZXhwb3J0IGRlZmF1bHQgZGVmaW5lQ29uZmlnKHtcclxuICBwbHVnaW5zOiBbdnVlKCldLFxyXG4gIHJlc29sdmU6IHtcclxuICAgIGFsaWFzOiB7XHJcbiAgICAgICdAJzogcmVzb2x2ZShfX2Rpcm5hbWUsICdzcmMnKVxyXG4gICAgfVxyXG4gIH0sXHJcbiAgY3NzOiB7XHJcbiAgICBwb3N0Y3NzOiB7XHJcbiAgICAgIHBsdWdpbnM6IFtcclxuICAgICAgICBwb3N0Y3NzUHhUb1ZpZXdwb3J0KHtcclxuICAgICAgICAgIHZpZXdwb3J0V2lkdGg6IDM3NSwgLy8gXHU4QkJFXHU4QkExXHU3QTNGXHU3Njg0XHU4OUM2XHU1M0UzXHU1QkJEXHU1RUE2XHJcbiAgICAgICAgICB1bml0UHJlY2lzaW9uOiA1LCAvLyBcdTUzNTVcdTRGNERcdThGNkNcdTYzNjJcdTU0MEVcdTRGRERcdTc1NTlcdTc2ODRcdTdDQkVcdTVFQTZcclxuICAgICAgICAgIHZpZXdwb3J0VW5pdDogJ3Z3JywgLy8gXHU1RTBDXHU2NzFCXHU0RjdGXHU3NTI4XHU3Njg0XHU4OUM2XHU1M0UzXHU1MzU1XHU0RjREXHJcbiAgICAgICAgICBzZWxlY3RvckJsYWNrTGlzdDogW10sIC8vIFx1OTcwMFx1ODk4MVx1NUZGRFx1NzU2NVx1NzY4NENTU1x1OTAwOVx1NjJFOVx1NTY2OFxyXG4gICAgICAgICAgbWluUGl4ZWxWYWx1ZTogMSwgLy8gXHU4QkJFXHU3RjZFXHU2NzAwXHU1QzBGXHU3Njg0XHU4RjZDXHU2MzYyXHU2NTcwXHU1MDNDXHVGRjBDXHU1OTgyXHU2NzlDXHU0RTNBMVx1NzY4NFx1OEJERFx1RkYwQ1x1NTNFQVx1NjcwOVx1NTkyN1x1NEU4RTFcdTc2ODRcdTUwM0NcdTRGMUFcdTg4QUJcdThGNkNcdTYzNjJcclxuICAgICAgICAgIG1lZGlhUXVlcnk6IGZhbHNlIC8vIFx1NUE5Mlx1NEY1M1x1NjdFNVx1OEJFMlx1OTFDQ1x1NzY4NFx1NTM1NVx1NEY0RFx1NjYyRlx1NTQyNlx1OTcwMFx1ODk4MVx1OEY2Q1x1NjM2Mlx1NTM1NVx1NEY0RFxyXG4gICAgICAgIH0pXHJcbiAgICAgIF1cclxuICAgIH1cclxuICB9LFxyXG4gIHNlcnZlcjoge1xyXG4gICAgcG9ydDogMzAwMSxcclxuICAgIHByb3h5OiB7XHJcbiAgICAgICcvYXBpJzoge1xyXG4gICAgICAgIHRhcmdldDogJ2h0dHA6Ly9sb2NhbGhvc3Q6ODA4MCcsXHJcbiAgICAgICAgY2hhbmdlT3JpZ2luOiB0cnVlXHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn0pICJdLAogICJtYXBwaW5ncyI6ICI7QUFBK2hCLFNBQVMsb0JBQW9CO0FBQzVqQixPQUFPLFNBQVM7QUFDaEIsU0FBUyxlQUFlO0FBQ3hCLE9BQU8seUJBQXlCO0FBSGhDLElBQU0sbUNBQW1DO0FBTXpDLElBQU8sc0JBQVEsYUFBYTtBQUFBLEVBQzFCLFNBQVMsQ0FBQyxJQUFJLENBQUM7QUFBQSxFQUNmLFNBQVM7QUFBQSxJQUNQLE9BQU87QUFBQSxNQUNMLEtBQUssUUFBUSxrQ0FBVyxLQUFLO0FBQUEsSUFDL0I7QUFBQSxFQUNGO0FBQUEsRUFDQSxLQUFLO0FBQUEsSUFDSCxTQUFTO0FBQUEsTUFDUCxTQUFTO0FBQUEsUUFDUCxvQkFBb0I7QUFBQSxVQUNsQixlQUFlO0FBQUE7QUFBQSxVQUNmLGVBQWU7QUFBQTtBQUFBLFVBQ2YsY0FBYztBQUFBO0FBQUEsVUFDZCxtQkFBbUIsQ0FBQztBQUFBO0FBQUEsVUFDcEIsZUFBZTtBQUFBO0FBQUEsVUFDZixZQUFZO0FBQUE7QUFBQSxRQUNkLENBQUM7QUFBQSxNQUNIO0FBQUEsSUFDRjtBQUFBLEVBQ0Y7QUFBQSxFQUNBLFFBQVE7QUFBQSxJQUNOLE1BQU07QUFBQSxJQUNOLE9BQU87QUFBQSxNQUNMLFFBQVE7QUFBQSxRQUNOLFFBQVE7QUFBQSxRQUNSLGNBQWM7QUFBQSxNQUNoQjtBQUFBLElBQ0Y7QUFBQSxFQUNGO0FBQ0YsQ0FBQzsiLAogICJuYW1lcyI6IFtdCn0K
